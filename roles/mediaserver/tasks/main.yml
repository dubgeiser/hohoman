---
- name: Ensure dependencies are installed
  apt:
    name:
      - apt-transport-https
      - gnupg
      - software-properties-common
    state: present
    update_cache: true

- name: Add Jellyfin repository GPG key
  ansible.builtin.get_url:
    url: "{{ jellyfin_repo_key_url }}"
    dest: "{{ jellyfin_repo_key_dest }}"
    mode: '0644'

- name: Add Jellyfin repository
  apt_repository:
    # NOTE: arch=arm64 hardcoded is necessary:
    # `ansible_facts.architecture` returns `aarch64` instead of `arm64`,
    # which _should_ be synonymously, but probably not when some string
    # matching is involved :-)
    repo: "deb [signed-by={{ jellyfin_repo_key_dest }} arch=arm64] {{ jellyfin_repo_url }} {{ ansible_facts.distribution_release }} main"
    state: present
    update_cache: true

- name: Install Jellyfin
  apt:
    name: jellyfin
    state: present
    update_cache: true

- name: Ensure Jellyfin directory exists
  file:
    path: "{{ jellyfin_dir }}"
    state: directory
    owner: jellyfin
    group: jellyfin
    mode: '0755'

- name: Stop Jellyfin before reconfiguring
  service:
    name: jellyfin
    state: stopped

# - TODO THIS NOT RIGHT name: Update Jellyfin systemd service to use external cache directory
#   lineinfile:
#     path: /etc/systemd/system/jellyfin.service.d/override.conf
#     create: true
#     mode: '0644'
#     regexp: '^Environment=JELLYFIN_CACHE_DIR='
#     line: "Environment=JELLYFIN_CACHE_DIR={{ jellyfin_dir }}"
#   notify: Reload systemd
#
# - name: Reload systemd daemon
#   systemd:
#     daemon_reload: true
#
# - name: Start Jellyfin
#   service:
#     name: jellyfin
#     state: started
#     enabled: true
