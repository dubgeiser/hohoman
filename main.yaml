---
- name: Provision NAS
  hosts: nas
  become: true
  vars_files:
    - vars/mounts.yaml
  pre_tasks:
    - name: Ensure drives are mounted
      tags: mounts
      ansible.posix.mount:
        path: "{{ item.path }}"
        src: "{{ item.src }}"
        fstype: "{{ item.fstype }}"
        opts: "{{ item.opts }}"
        state: "{{ item.state }}"
        dump: "{{ item.dump }}"
        passno: "{{ item.passno }}"
      loop: "{{ mounts }}"
  roles:
    - role: basetools
      tags: basetools
    - role: fileserver
      tags: fileserver
      vars:
        samba_config: /etc/samba/smb.conf
        samba_shares:
          - name: "Scans"
            path: "{{ mount_paths['media'] }}/scans"
            comment: "Scans from network attached scanner"
            valid_users: "per,scanner"
            browseable: "yes"
            public: "no"
            guest_ok: "yes"
            writeable: "yes"
          - name: "Downloads"
            path: "{{ mount_paths['media'] }}/torrents/completed"
            valid_users: "per"
            browseable: "no"
            public: "no"
            guest_ok: "no"
          - name: "Movies"
            path: "{{ mount_paths['media'] }}/movies"
            valid_users: "per"
            browseable: "no"
            public: "no"
            guest_ok: "no"
          - name: "Series"
            path: "{{ mount_paths['media'] }}/series"
            valid_users: "per"
            browseable: "no"
            public: "no"
            guest_ok: "no"
          - name: "XXX"
            path: "{{ mount_paths['media'] }}/xxx"
            valid_users: "per"
            browseable: "no"
            public: "no"
            guest_ok: "no"
          - name: "Music"
            path: "{{ mount_paths['media'] }}/music"
            valid_users: "per"
            browseable: "no"
            public: "no"
            guest_ok: "no"
          - name: "Pictures"
            path: "{{ mount_paths['media'] }}/pictures"
            valid_users: "per"
            browseable: "no"
            public: "no"
            guest_ok: "no"
          - name: "Books"
            path: "{{ mount_paths['media'] }}/books"
            valid_users: "@users"
            browseable: "yes"
            public: "no"
            guest_ok: "no"
    - role: webserver
      tags: webserver
    - role: torrentclient
      tags: torrentclient
      vars:
        transmission_dir_download: "{{ mount_paths['media'] }}/torrents/completed"
        transmission_dir_incomplete: "{{ mount_paths['media'] }}/torrents/inprogress"
    - role: mediaserver
      tags: mediaserver
      vars:
        jellyfin_dir: "{{ mount_paths['data'] }}/jellyfin"
        jellyfin_media_dir: "{{ mount_paths['media'] }}"
        jellyfin_repo_key_url: "https://repo.jellyfin.org/debian/jellyfin_team.gpg.key"
        # Yeah, we actually shouldn't, but I want my MTV
        jellyfin_repo_key_dest: "/etc/apt/trusted.gpg.d/jellyfin.asc"
        jellyfin_repo_url: "https://repo.jellyfin.org/debian"
